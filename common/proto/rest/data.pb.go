/*
 * Copyright (c) 2018. Abstrium SAS <team (at) pydio.com>
 * This file is part of Pydio Cells.
 *
 * Pydio Cells is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Pydio Cells is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Pydio Cells.  If not, see <http://www.gnu.org/licenses/>.
 *
 * The latest code can be found at <https://pydio.com>.
 */

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto

package rest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import tree "github.com/pydio/cells/common/proto/tree"
import docstore "github.com/pydio/cells/common/proto/docstore"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SearchResults struct {
	Results []*tree.Node `protobuf:"bytes,1,rep,name=Results" json:"Results,omitempty"`
	Total   int32        `protobuf:"varint,2,opt,name=Total" json:"Total,omitempty"`
}

func (m *SearchResults) Reset()                    { *m = SearchResults{} }
func (m *SearchResults) String() string            { return proto.CompactTextString(m) }
func (*SearchResults) ProtoMessage()               {}
func (*SearchResults) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *SearchResults) GetResults() []*tree.Node {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *SearchResults) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type Metadata struct {
	Namespace string `protobuf:"bytes,1,opt,name=Namespace" json:"Namespace,omitempty"`
	JsonMeta  string `protobuf:"bytes,2,opt,name=JsonMeta" json:"JsonMeta,omitempty"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (m *Metadata) String() string            { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *Metadata) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Metadata) GetJsonMeta() string {
	if m != nil {
		return m.JsonMeta
	}
	return ""
}

type MetaCollection struct {
	NodePath  string      `protobuf:"bytes,1,opt,name=NodePath" json:"NodePath,omitempty"`
	Metadatas []*Metadata `protobuf:"bytes,2,rep,name=Metadatas" json:"Metadatas,omitempty"`
}

func (m *MetaCollection) Reset()                    { *m = MetaCollection{} }
func (m *MetaCollection) String() string            { return proto.CompactTextString(m) }
func (*MetaCollection) ProtoMessage()               {}
func (*MetaCollection) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *MetaCollection) GetNodePath() string {
	if m != nil {
		return m.NodePath
	}
	return ""
}

func (m *MetaCollection) GetMetadatas() []*Metadata {
	if m != nil {
		return m.Metadatas
	}
	return nil
}

type MetaNamespaceRequest struct {
	NodePath  string   `protobuf:"bytes,1,opt,name=NodePath" json:"NodePath,omitempty"`
	Namespace []string `protobuf:"bytes,2,rep,name=Namespace" json:"Namespace,omitempty"`
}

func (m *MetaNamespaceRequest) Reset()                    { *m = MetaNamespaceRequest{} }
func (m *MetaNamespaceRequest) String() string            { return proto.CompactTextString(m) }
func (*MetaNamespaceRequest) ProtoMessage()               {}
func (*MetaNamespaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *MetaNamespaceRequest) GetNodePath() string {
	if m != nil {
		return m.NodePath
	}
	return ""
}

func (m *MetaNamespaceRequest) GetNamespace() []string {
	if m != nil {
		return m.Namespace
	}
	return nil
}

type GetBulkMetaRequest struct {
	NodePaths        []string `protobuf:"bytes,1,rep,name=NodePaths" json:"NodePaths,omitempty"`
	NodeUuids        []string `protobuf:"bytes,2,rep,name=NodeUuids" json:"NodeUuids,omitempty"`
	AllMetaProviders bool     `protobuf:"varint,3,opt,name=AllMetaProviders" json:"AllMetaProviders,omitempty"`
	Versions         bool     `protobuf:"varint,4,opt,name=Versions" json:"Versions,omitempty"`
}

func (m *GetBulkMetaRequest) Reset()                    { *m = GetBulkMetaRequest{} }
func (m *GetBulkMetaRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBulkMetaRequest) ProtoMessage()               {}
func (*GetBulkMetaRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *GetBulkMetaRequest) GetNodePaths() []string {
	if m != nil {
		return m.NodePaths
	}
	return nil
}

func (m *GetBulkMetaRequest) GetNodeUuids() []string {
	if m != nil {
		return m.NodeUuids
	}
	return nil
}

func (m *GetBulkMetaRequest) GetAllMetaProviders() bool {
	if m != nil {
		return m.AllMetaProviders
	}
	return false
}

func (m *GetBulkMetaRequest) GetVersions() bool {
	if m != nil {
		return m.Versions
	}
	return false
}

type BulkMetaResponse struct {
	Nodes []*tree.Node `protobuf:"bytes,1,rep,name=Nodes" json:"Nodes,omitempty"`
}

func (m *BulkMetaResponse) Reset()                    { *m = BulkMetaResponse{} }
func (m *BulkMetaResponse) String() string            { return proto.CompactTextString(m) }
func (*BulkMetaResponse) ProtoMessage()               {}
func (*BulkMetaResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *BulkMetaResponse) GetNodes() []*tree.Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type SetBulkMetaRequest struct {
	Metas []*MetaCollection `protobuf:"bytes,1,rep,name=Metas" json:"Metas,omitempty"`
}

func (m *SetBulkMetaRequest) Reset()                    { *m = SetBulkMetaRequest{} }
func (m *SetBulkMetaRequest) String() string            { return proto.CompactTextString(m) }
func (*SetBulkMetaRequest) ProtoMessage()               {}
func (*SetBulkMetaRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *SetBulkMetaRequest) GetMetas() []*MetaCollection {
	if m != nil {
		return m.Metas
	}
	return nil
}

type DeleteBulkMetaRequest struct {
	MetaNamespaceRequests []*MetaNamespaceRequest `protobuf:"bytes,1,rep,name=MetaNamespaceRequests" json:"MetaNamespaceRequests,omitempty"`
}

func (m *DeleteBulkMetaRequest) Reset()                    { *m = DeleteBulkMetaRequest{} }
func (m *DeleteBulkMetaRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteBulkMetaRequest) ProtoMessage()               {}
func (*DeleteBulkMetaRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *DeleteBulkMetaRequest) GetMetaNamespaceRequests() []*MetaNamespaceRequest {
	if m != nil {
		return m.MetaNamespaceRequests
	}
	return nil
}

type NodesCollection struct {
	Parent   *tree.Node   `protobuf:"bytes,1,opt,name=Parent" json:"Parent,omitempty"`
	Children []*tree.Node `protobuf:"bytes,2,rep,name=Children" json:"Children,omitempty"`
}

func (m *NodesCollection) Reset()                    { *m = NodesCollection{} }
func (m *NodesCollection) String() string            { return proto.CompactTextString(m) }
func (*NodesCollection) ProtoMessage()               {}
func (*NodesCollection) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *NodesCollection) GetParent() *tree.Node {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *NodesCollection) GetChildren() []*tree.Node {
	if m != nil {
		return m.Children
	}
	return nil
}

type ListDocstoreRequest struct {
	StoreID   string                  `protobuf:"bytes,1,opt,name=StoreID" json:"StoreID,omitempty"`
	Query     *docstore.DocumentQuery `protobuf:"bytes,2,opt,name=Query" json:"Query,omitempty"`
	CountOnly bool                    `protobuf:"varint,3,opt,name=CountOnly" json:"CountOnly,omitempty"`
}

func (m *ListDocstoreRequest) Reset()                    { *m = ListDocstoreRequest{} }
func (m *ListDocstoreRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDocstoreRequest) ProtoMessage()               {}
func (*ListDocstoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

func (m *ListDocstoreRequest) GetStoreID() string {
	if m != nil {
		return m.StoreID
	}
	return ""
}

func (m *ListDocstoreRequest) GetQuery() *docstore.DocumentQuery {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *ListDocstoreRequest) GetCountOnly() bool {
	if m != nil {
		return m.CountOnly
	}
	return false
}

type DocstoreCollection struct {
	Docs  []*docstore.Document `protobuf:"bytes,1,rep,name=Docs" json:"Docs,omitempty"`
	Total int64                `protobuf:"varint,2,opt,name=Total" json:"Total,omitempty"`
}

func (m *DocstoreCollection) Reset()                    { *m = DocstoreCollection{} }
func (m *DocstoreCollection) String() string            { return proto.CompactTextString(m) }
func (*DocstoreCollection) ProtoMessage()               {}
func (*DocstoreCollection) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{10} }

func (m *DocstoreCollection) GetDocs() []*docstore.Document {
	if m != nil {
		return m.Docs
	}
	return nil
}

func (m *DocstoreCollection) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ChangeRequest struct {
	SeqID   int64  `protobuf:"varint,1,opt,name=SeqID" json:"SeqID,omitempty"`
	Filter  string `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	Flatten bool   `protobuf:"varint,3,opt,name=flatten" json:"flatten,omitempty"`
	Stream  bool   `protobuf:"varint,4,opt,name=stream" json:"stream,omitempty"`
}

func (m *ChangeRequest) Reset()                    { *m = ChangeRequest{} }
func (m *ChangeRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeRequest) ProtoMessage()               {}
func (*ChangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{11} }

func (m *ChangeRequest) GetSeqID() int64 {
	if m != nil {
		return m.SeqID
	}
	return 0
}

func (m *ChangeRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ChangeRequest) GetFlatten() bool {
	if m != nil {
		return m.Flatten
	}
	return false
}

func (m *ChangeRequest) GetStream() bool {
	if m != nil {
		return m.Stream
	}
	return false
}

type ChangeCollection struct {
	Changes   []*tree.SyncChange `protobuf:"bytes,1,rep,name=Changes,json=changes" json:"Changes,omitempty"`
	LastSeqId int64              `protobuf:"varint,2,opt,name=LastSeqId,json=last_seq" json:"LastSeqId,omitempty"`
}

func (m *ChangeCollection) Reset()                    { *m = ChangeCollection{} }
func (m *ChangeCollection) String() string            { return proto.CompactTextString(m) }
func (*ChangeCollection) ProtoMessage()               {}
func (*ChangeCollection) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{12} }

func (m *ChangeCollection) GetChanges() []*tree.SyncChange {
	if m != nil {
		return m.Changes
	}
	return nil
}

func (m *ChangeCollection) GetLastSeqId() int64 {
	if m != nil {
		return m.LastSeqId
	}
	return 0
}

func init() {
	proto.RegisterType((*SearchResults)(nil), "rest.SearchResults")
	proto.RegisterType((*Metadata)(nil), "rest.Metadata")
	proto.RegisterType((*MetaCollection)(nil), "rest.MetaCollection")
	proto.RegisterType((*MetaNamespaceRequest)(nil), "rest.MetaNamespaceRequest")
	proto.RegisterType((*GetBulkMetaRequest)(nil), "rest.GetBulkMetaRequest")
	proto.RegisterType((*BulkMetaResponse)(nil), "rest.BulkMetaResponse")
	proto.RegisterType((*SetBulkMetaRequest)(nil), "rest.SetBulkMetaRequest")
	proto.RegisterType((*DeleteBulkMetaRequest)(nil), "rest.DeleteBulkMetaRequest")
	proto.RegisterType((*NodesCollection)(nil), "rest.NodesCollection")
	proto.RegisterType((*ListDocstoreRequest)(nil), "rest.ListDocstoreRequest")
	proto.RegisterType((*DocstoreCollection)(nil), "rest.DocstoreCollection")
	proto.RegisterType((*ChangeRequest)(nil), "rest.ChangeRequest")
	proto.RegisterType((*ChangeCollection)(nil), "rest.ChangeCollection")
}

func init() { proto.RegisterFile("data.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 624 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdf, 0x6b, 0x13, 0x41,
	0x10, 0x26, 0x4d, 0xd3, 0x24, 0x53, 0x5a, 0xc3, 0x9a, 0xea, 0x11, 0x7d, 0x08, 0x8b, 0x94, 0x50,
	0x34, 0x81, 0x2a, 0x3e, 0x8a, 0x9a, 0x80, 0xa8, 0xb5, 0xc6, 0x8d, 0xfa, 0xa0, 0x88, 0x6c, 0xef,
	0xa6, 0xcd, 0xe1, 0x66, 0x37, 0xdd, 0xdd, 0x2b, 0x04, 0xfc, 0x43, 0xfc, 0x73, 0x65, 0xef, 0x76,
	0xef, 0xd2, 0x36, 0x88, 0x2f, 0xed, 0x7d, 0xf3, 0xe3, 0x9b, 0xf9, 0x66, 0x67, 0x02, 0x90, 0x70,
	0xcb, 0x87, 0x4b, 0xad, 0xac, 0x22, 0xdb, 0x1a, 0x8d, 0xed, 0x3d, 0xbf, 0x48, 0xed, 0x3c, 0x3b,
	0x1b, 0xc6, 0x6a, 0x31, 0x5a, 0xae, 0x92, 0x54, 0x8d, 0x0c, 0xea, 0xab, 0x34, 0x46, 0x33, 0x8a,
	0xd5, 0x62, 0xa1, 0xe4, 0x28, 0x8f, 0x1e, 0x59, 0x8d, 0x98, 0xff, 0x29, 0xb2, 0x7b, 0x2f, 0xfe,
	0x33, 0x2f, 0x51, 0xb1, 0xb1, 0x4a, 0x63, 0xf9, 0x51, 0xe4, 0xd3, 0xf7, 0xb0, 0x37, 0x43, 0xae,
	0xe3, 0x39, 0x43, 0x93, 0x09, 0x6b, 0xc8, 0x23, 0x68, 0xfa, 0xcf, 0xa8, 0xd6, 0xaf, 0x0f, 0x76,
	0x8f, 0x61, 0x98, 0x97, 0x3b, 0x55, 0x09, 0xb2, 0xe0, 0x22, 0x5d, 0x68, 0x7c, 0x56, 0x96, 0x8b,
	0x68, 0xab, 0x5f, 0x1b, 0x34, 0x58, 0x01, 0xe8, 0x04, 0x5a, 0x1f, 0xd0, 0x72, 0x27, 0x8e, 0x3c,
	0x84, 0xf6, 0x29, 0x5f, 0xa0, 0x59, 0xf2, 0x18, 0xa3, 0x5a, 0xbf, 0x36, 0x68, 0xb3, 0xca, 0x40,
	0x7a, 0xd0, 0x7a, 0x67, 0x94, 0x74, 0xd1, 0x39, 0x45, 0x9b, 0x95, 0x98, 0x7e, 0x83, 0x7d, 0xf7,
	0x7f, 0xac, 0x84, 0xc0, 0xd8, 0xa6, 0x4a, 0xba, 0x68, 0x57, 0x7e, 0xca, 0xed, 0xdc, 0x53, 0x95,
	0x98, 0x3c, 0x86, 0x76, 0xa8, 0x69, 0xa2, 0xad, 0xbc, 0xe3, 0xfd, 0xa1, 0x1b, 0xe9, 0x30, 0x98,
	0x59, 0x15, 0x40, 0xa7, 0xd0, 0x75, 0xa0, 0x6c, 0x84, 0xe1, 0x65, 0x86, 0xc6, 0xfe, 0xb3, 0xc2,
	0x35, 0x25, 0xae, 0xc2, 0xba, 0x12, 0xfa, 0xa7, 0x06, 0xe4, 0x0d, 0xda, 0xd7, 0x99, 0xf8, 0xe5,
	0x98, 0x03, 0xa1, 0x4b, 0xf2, 0x04, 0xc5, 0x20, 0x5d, 0x52, 0x30, 0x04, 0xef, 0x97, 0x2c, 0x4d,
	0x4c, 0x49, 0x19, 0x0c, 0xe4, 0x08, 0x3a, 0xaf, 0x84, 0x70, 0x6c, 0x53, 0xad, 0xae, 0xd2, 0x04,
	0xb5, 0x89, 0xea, 0xfd, 0xda, 0xa0, 0xc5, 0x6e, 0xd9, 0x5d, 0xe3, 0x5f, 0x51, 0x9b, 0x54, 0x49,
	0x13, 0x6d, 0xe7, 0x31, 0x25, 0xa6, 0xcf, 0xa0, 0x53, 0xb5, 0x65, 0x96, 0x4a, 0x1a, 0x24, 0x7d,
	0x68, 0xb8, 0x42, 0x9b, 0x1e, 0xb7, 0x70, 0xd0, 0x97, 0x40, 0x66, 0xb7, 0xf5, 0x1c, 0x41, 0xc3,
	0xc1, 0x90, 0xd7, 0xad, 0x46, 0x5c, 0xbd, 0x13, 0x2b, 0x42, 0x68, 0x0a, 0x07, 0x13, 0x14, 0x68,
	0xf1, 0x26, 0xc9, 0x14, 0x0e, 0x36, 0x4d, 0x3f, 0x90, 0xf6, 0x2a, 0xd2, 0x9b, 0x21, 0x6c, 0x73,
	0x22, 0xfd, 0x01, 0x77, 0xf2, 0xae, 0xd7, 0x96, 0x85, 0xc2, 0xce, 0x94, 0x6b, 0x94, 0x36, 0x7f,
	0xc8, 0xeb, 0x12, 0xbd, 0x87, 0x1c, 0x42, 0x6b, 0x3c, 0x4f, 0x45, 0xa2, 0x51, 0xfa, 0x9d, 0x59,
	0x8f, 0x2a, 0x7d, 0xf4, 0x37, 0xdc, 0x3d, 0x49, 0x8d, 0x9d, 0xf8, 0x9b, 0x09, 0x3a, 0x22, 0x68,
	0xce, 0x1c, 0x7e, 0x3b, 0xf1, 0xcb, 0x12, 0x20, 0x79, 0x02, 0x8d, 0x4f, 0x19, 0xea, 0x55, 0xbe,
	0xd4, 0xbb, 0xc7, 0xf7, 0x87, 0xe5, 0xb9, 0x4d, 0x54, 0x9c, 0x2d, 0x50, 0xda, 0xdc, 0xcd, 0x8a,
	0x28, 0xb7, 0x07, 0x63, 0x95, 0x49, 0xfb, 0x51, 0x8a, 0x95, 0x7f, 0xe2, 0xca, 0x40, 0x19, 0x90,
	0x50, 0x79, 0x4d, 0xdf, 0x21, 0x6c, 0x3b, 0xab, 0x9f, 0x19, 0xb9, 0x5d, 0x81, 0xe5, 0xfe, 0xeb,
	0x27, 0x5a, 0x0f, 0x27, 0xaa, 0x60, 0x6f, 0x3c, 0xe7, 0xf2, 0xa2, 0xd4, 0xd2, 0x85, 0xc6, 0x0c,
	0x2f, 0xbd, 0x92, 0x3a, 0x2b, 0x00, 0xb9, 0x07, 0x3b, 0xe7, 0xa9, 0xb0, 0xa8, 0xfd, 0x75, 0x7a,
	0xe4, 0x94, 0x9f, 0x0b, 0x6e, 0x2d, 0x4a, 0xdf, 0x6e, 0x80, 0x2e, 0xc3, 0x58, 0x8d, 0x7c, 0xe1,
	0xd7, 0xd0, 0x23, 0xfa, 0x1d, 0x3a, 0x45, 0xc1, 0x35, 0x09, 0x47, 0xd0, 0x2c, 0x6c, 0x41, 0x45,
	0xa7, 0x98, 0xfe, 0x6c, 0x25, 0x63, 0xdf, 0x5d, 0x33, 0x2e, 0x02, 0xc8, 0x03, 0x68, 0x9f, 0x70,
	0x63, 0x5d, 0x5b, 0x89, 0x97, 0xd2, 0x12, 0xdc, 0xd8, 0x9f, 0x06, 0x2f, 0xcf, 0x76, 0xf2, 0x1f,
	0xb1, 0xa7, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x3e, 0x7c, 0xeb, 0x50, 0x05, 0x00, 0x00,
}
