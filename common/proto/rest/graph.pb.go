/*
 * Copyright (c) 2018. Abstrium SAS <team (at) pydio.com>
 * This file is part of Pydio Cells.
 *
 * Pydio Cells is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Pydio Cells is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Pydio Cells.  If not, see <http://www.gnu.org/licenses/>.
 *
 * The latest code can be found at <https://pydio.com>.
 */

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: graph.proto

package rest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import idm "github.com/pydio/cells/common/proto/idm"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserStateRequest struct {
	Segment string `protobuf:"bytes,1,opt,name=Segment" json:"Segment,omitempty"`
}

func (m *UserStateRequest) Reset()                    { *m = UserStateRequest{} }
func (m *UserStateRequest) String() string            { return proto.CompactTextString(m) }
func (*UserStateRequest) ProtoMessage()               {}
func (*UserStateRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *UserStateRequest) GetSegment() string {
	if m != nil {
		return m.Segment
	}
	return ""
}

type UserStateResponse struct {
	Workspaces         []*idm.Workspace  `protobuf:"bytes,1,rep,name=Workspaces" json:"Workspaces,omitempty"`
	WorkspacesAccesses map[string]string `protobuf:"bytes,2,rep,name=WorkspacesAccesses" json:"WorkspacesAccesses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *UserStateResponse) Reset()                    { *m = UserStateResponse{} }
func (m *UserStateResponse) String() string            { return proto.CompactTextString(m) }
func (*UserStateResponse) ProtoMessage()               {}
func (*UserStateResponse) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *UserStateResponse) GetWorkspaces() []*idm.Workspace {
	if m != nil {
		return m.Workspaces
	}
	return nil
}

func (m *UserStateResponse) GetWorkspacesAccesses() map[string]string {
	if m != nil {
		return m.WorkspacesAccesses
	}
	return nil
}

type RelationRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=UserId" json:"UserId,omitempty"`
}

func (m *RelationRequest) Reset()                    { *m = RelationRequest{} }
func (m *RelationRequest) String() string            { return proto.CompactTextString(m) }
func (*RelationRequest) ProtoMessage()               {}
func (*RelationRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *RelationRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type RelationResponse struct {
	SharedCells    []*idm.Workspace `protobuf:"bytes,1,rep,name=SharedCells" json:"SharedCells,omitempty"`
	BelongsToTeams []*idm.Role      `protobuf:"bytes,3,rep,name=BelongsToTeams" json:"BelongsToTeams,omitempty"`
}

func (m *RelationResponse) Reset()                    { *m = RelationResponse{} }
func (m *RelationResponse) String() string            { return proto.CompactTextString(m) }
func (*RelationResponse) ProtoMessage()               {}
func (*RelationResponse) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *RelationResponse) GetSharedCells() []*idm.Workspace {
	if m != nil {
		return m.SharedCells
	}
	return nil
}

func (m *RelationResponse) GetBelongsToTeams() []*idm.Role {
	if m != nil {
		return m.BelongsToTeams
	}
	return nil
}

func init() {
	proto.RegisterType((*UserStateRequest)(nil), "rest.UserStateRequest")
	proto.RegisterType((*UserStateResponse)(nil), "rest.UserStateResponse")
	proto.RegisterType((*RelationRequest)(nil), "rest.RelationRequest")
	proto.RegisterType((*RelationResponse)(nil), "rest.RelationResponse")
}

func init() { proto.RegisterFile("graph.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x4f, 0xf2, 0x40,
	0x10, 0xc6, 0x53, 0x78, 0x5f, 0x0c, 0x43, 0x82, 0xb8, 0x31, 0xda, 0x70, 0x22, 0x3d, 0x61, 0x62,
	0xb6, 0xfe, 0x3b, 0x18, 0x6f, 0x6a, 0x38, 0x78, 0x5d, 0x30, 0x1e, 0xcd, 0xd2, 0x4e, 0x4a, 0x43,
	0xdb, 0xa9, 0x3b, 0x0b, 0x86, 0xcf, 0xec, 0x97, 0x30, 0x5d, 0x8a, 0x10, 0x91, 0xc3, 0x26, 0xfb,
	0x4c, 0x7e, 0xcf, 0xcc, 0xce, 0xb3, 0xd0, 0x49, 0x8c, 0x2e, 0x67, 0xb2, 0x34, 0x64, 0x49, 0xfc,
	0x33, 0xc8, 0xb6, 0x7f, 0x97, 0xa4, 0x76, 0xb6, 0x98, 0xca, 0x88, 0xf2, 0xb0, 0x5c, 0xc5, 0x29,
	0x85, 0x8c, 0x66, 0x99, 0x46, 0xc8, 0x61, 0x44, 0x79, 0x4e, 0x45, 0xe8, 0xe8, 0x30, 0x8d, 0xf3,
	0xea, 0xac, 0xbd, 0xc1, 0x25, 0xf4, 0x5e, 0x19, 0xcd, 0xd8, 0x6a, 0x8b, 0x0a, 0x3f, 0x16, 0xc8,
	0x56, 0xf8, 0x70, 0x34, 0xc6, 0x24, 0xc7, 0xc2, 0xfa, 0xde, 0xc0, 0x1b, 0xb6, 0xd5, 0x46, 0x06,
	0x5f, 0x1e, 0x9c, 0xec, 0xe0, 0x5c, 0x52, 0xc1, 0x28, 0x24, 0xc0, 0x1b, 0x99, 0x39, 0x97, 0x3a,
	0x42, 0xf6, 0xbd, 0x41, 0x73, 0xd8, 0xb9, 0xe9, 0xca, 0x6a, 0xc6, 0x4f, 0x59, 0xed, 0x10, 0xe2,
	0x1d, 0xc4, 0x56, 0x3d, 0x46, 0x11, 0x32, 0x23, 0xfb, 0x0d, 0xe7, 0x0b, 0x65, 0xb5, 0x8c, 0xdc,
	0x1b, 0x22, 0xf7, 0x1d, 0xa3, 0xc2, 0x9a, 0x95, 0xfa, 0xa3, 0x55, 0x7f, 0x04, 0xe7, 0x07, 0x70,
	0xd1, 0x83, 0xe6, 0x1c, 0x57, 0xf5, 0x5e, 0xd5, 0x55, 0x9c, 0xc2, 0xff, 0xa5, 0xce, 0x16, 0xe8,
	0x37, 0x5c, 0x6d, 0x2d, 0x1e, 0x1a, 0xf7, 0x5e, 0x70, 0x01, 0xc7, 0x0a, 0x33, 0x6d, 0x53, 0x2a,
	0x36, 0xd1, 0x9c, 0x41, 0xab, 0x7a, 0xda, 0x4b, 0x5c, 0x77, 0xa8, 0x55, 0xf0, 0x09, 0xbd, 0x2d,
	0x5a, 0xc7, 0x72, 0x05, 0x9d, 0xf1, 0x4c, 0x1b, 0x8c, 0x9f, 0x31, 0xcb, 0x0e, 0xe5, 0xb2, 0x8b,
	0x88, 0x6b, 0xe8, 0x3e, 0x61, 0x46, 0x45, 0xc2, 0x13, 0x9a, 0xa0, 0xce, 0xd9, 0x6f, 0x3a, 0x53,
	0xdb, 0x99, 0x14, 0x65, 0xa8, 0x7e, 0x01, 0xd3, 0x96, 0xfb, 0xc6, 0xdb, 0xef, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xd3, 0x02, 0xec, 0x84, 0x11, 0x02, 0x00, 0x00,
}
