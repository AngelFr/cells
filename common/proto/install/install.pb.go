// Code generated by protoc-gen-go. DO NOT EDIT.
// source: install.proto

/*
Package install is a generated protocol buffer package.

It is generated from these files:
	install.proto

It has these top-level messages:
	InstallConfig
	CheckResult
	PerformCheckRequest
	PerformCheckResponse
	GetDefaultsRequest
	GetDefaultsResponse
	GetAgreementRequest
	GetAgreementResponse
	InstallRequest
	InstallResponse
*/
package install

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InstallConfig struct {
	InternalUrl            string         `protobuf:"bytes,32,opt,name=internalUrl" json:"internalUrl,omitempty"`
	DbConnectionType       string         `protobuf:"bytes,1,opt,name=dbConnectionType" json:"dbConnectionType,omitempty"`
	DbTCPHostname          string         `protobuf:"bytes,2,opt,name=dbTCPHostname" json:"dbTCPHostname,omitempty"`
	DbTCPPort              string         `protobuf:"bytes,3,opt,name=dbTCPPort" json:"dbTCPPort,omitempty"`
	DbTCPName              string         `protobuf:"bytes,4,opt,name=dbTCPName" json:"dbTCPName,omitempty"`
	DbTCPUser              string         `protobuf:"bytes,5,opt,name=dbTCPUser" json:"dbTCPUser,omitempty"`
	DbTCPPassword          string         `protobuf:"bytes,6,opt,name=dbTCPPassword" json:"dbTCPPassword,omitempty"`
	DbSocketFile           string         `protobuf:"bytes,7,opt,name=dbSocketFile" json:"dbSocketFile,omitempty"`
	DbSocketName           string         `protobuf:"bytes,8,opt,name=dbSocketName" json:"dbSocketName,omitempty"`
	DbSocketUser           string         `protobuf:"bytes,9,opt,name=dbSocketUser" json:"dbSocketUser,omitempty"`
	DbSocketPassword       string         `protobuf:"bytes,10,opt,name=dbSocketPassword" json:"dbSocketPassword,omitempty"`
	DbManualDSN            string         `protobuf:"bytes,11,opt,name=dbManualDSN" json:"dbManualDSN,omitempty"`
	DsName                 string         `protobuf:"bytes,12,opt,name=dsName" json:"dsName,omitempty"`
	DsPort                 string         `protobuf:"bytes,13,opt,name=dsPort" json:"dsPort,omitempty"`
	DsFolder               string         `protobuf:"bytes,14,opt,name=dsFolder" json:"dsFolder,omitempty"`
	ExternalMicro          string         `protobuf:"bytes,15,opt,name=externalMicro" json:"externalMicro,omitempty"`
	ExternalGateway        string         `protobuf:"bytes,16,opt,name=externalGateway" json:"externalGateway,omitempty"`
	ExternalWebsocket      string         `protobuf:"bytes,17,opt,name=externalWebsocket" json:"externalWebsocket,omitempty"`
	ExternalFrontPlugins   string         `protobuf:"bytes,18,opt,name=externalFrontPlugins" json:"externalFrontPlugins,omitempty"`
	ExternalDAV            string         `protobuf:"bytes,19,opt,name=externalDAV" json:"externalDAV,omitempty"`
	ExternalWOPI           string         `protobuf:"bytes,20,opt,name=externalWOPI" json:"externalWOPI,omitempty"`
	ExternalDex            string         `protobuf:"bytes,21,opt,name=externalDex" json:"externalDex,omitempty"`
	ExternalDexID          string         `protobuf:"bytes,22,opt,name=externalDexID" json:"externalDexID,omitempty"`
	ExternalDexSecret      string         `protobuf:"bytes,23,opt,name=externalDexSecret" json:"externalDexSecret,omitempty"`
	FrontendHosts          string         `protobuf:"bytes,24,opt,name=frontendHosts" json:"frontendHosts,omitempty"`
	FrontendLogin          string         `protobuf:"bytes,25,opt,name=frontendLogin" json:"frontendLogin,omitempty"`
	FrontendPassword       string         `protobuf:"bytes,26,opt,name=frontendPassword" json:"frontendPassword,omitempty"`
	FrontendRepeatPassword string         `protobuf:"bytes,27,opt,name=frontendRepeatPassword" json:"frontendRepeatPassword,omitempty"`
	FpmAddress             string         `protobuf:"bytes,28,opt,name=fpmAddress" json:"fpmAddress,omitempty"`
	LicenseRequired        bool           `protobuf:"varint,29,opt,name=licenseRequired" json:"licenseRequired,omitempty"`
	LicenseString          string         `protobuf:"bytes,30,opt,name=licenseString" json:"licenseString,omitempty"`
	CheckResults           []*CheckResult `protobuf:"bytes,31,rep,name=CheckResults" json:"CheckResults,omitempty"`
}

func (m *InstallConfig) Reset()                    { *m = InstallConfig{} }
func (m *InstallConfig) String() string            { return proto.CompactTextString(m) }
func (*InstallConfig) ProtoMessage()               {}
func (*InstallConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InstallConfig) GetInternalUrl() string {
	if m != nil {
		return m.InternalUrl
	}
	return ""
}

func (m *InstallConfig) GetDbConnectionType() string {
	if m != nil {
		return m.DbConnectionType
	}
	return ""
}

func (m *InstallConfig) GetDbTCPHostname() string {
	if m != nil {
		return m.DbTCPHostname
	}
	return ""
}

func (m *InstallConfig) GetDbTCPPort() string {
	if m != nil {
		return m.DbTCPPort
	}
	return ""
}

func (m *InstallConfig) GetDbTCPName() string {
	if m != nil {
		return m.DbTCPName
	}
	return ""
}

func (m *InstallConfig) GetDbTCPUser() string {
	if m != nil {
		return m.DbTCPUser
	}
	return ""
}

func (m *InstallConfig) GetDbTCPPassword() string {
	if m != nil {
		return m.DbTCPPassword
	}
	return ""
}

func (m *InstallConfig) GetDbSocketFile() string {
	if m != nil {
		return m.DbSocketFile
	}
	return ""
}

func (m *InstallConfig) GetDbSocketName() string {
	if m != nil {
		return m.DbSocketName
	}
	return ""
}

func (m *InstallConfig) GetDbSocketUser() string {
	if m != nil {
		return m.DbSocketUser
	}
	return ""
}

func (m *InstallConfig) GetDbSocketPassword() string {
	if m != nil {
		return m.DbSocketPassword
	}
	return ""
}

func (m *InstallConfig) GetDbManualDSN() string {
	if m != nil {
		return m.DbManualDSN
	}
	return ""
}

func (m *InstallConfig) GetDsName() string {
	if m != nil {
		return m.DsName
	}
	return ""
}

func (m *InstallConfig) GetDsPort() string {
	if m != nil {
		return m.DsPort
	}
	return ""
}

func (m *InstallConfig) GetDsFolder() string {
	if m != nil {
		return m.DsFolder
	}
	return ""
}

func (m *InstallConfig) GetExternalMicro() string {
	if m != nil {
		return m.ExternalMicro
	}
	return ""
}

func (m *InstallConfig) GetExternalGateway() string {
	if m != nil {
		return m.ExternalGateway
	}
	return ""
}

func (m *InstallConfig) GetExternalWebsocket() string {
	if m != nil {
		return m.ExternalWebsocket
	}
	return ""
}

func (m *InstallConfig) GetExternalFrontPlugins() string {
	if m != nil {
		return m.ExternalFrontPlugins
	}
	return ""
}

func (m *InstallConfig) GetExternalDAV() string {
	if m != nil {
		return m.ExternalDAV
	}
	return ""
}

func (m *InstallConfig) GetExternalWOPI() string {
	if m != nil {
		return m.ExternalWOPI
	}
	return ""
}

func (m *InstallConfig) GetExternalDex() string {
	if m != nil {
		return m.ExternalDex
	}
	return ""
}

func (m *InstallConfig) GetExternalDexID() string {
	if m != nil {
		return m.ExternalDexID
	}
	return ""
}

func (m *InstallConfig) GetExternalDexSecret() string {
	if m != nil {
		return m.ExternalDexSecret
	}
	return ""
}

func (m *InstallConfig) GetFrontendHosts() string {
	if m != nil {
		return m.FrontendHosts
	}
	return ""
}

func (m *InstallConfig) GetFrontendLogin() string {
	if m != nil {
		return m.FrontendLogin
	}
	return ""
}

func (m *InstallConfig) GetFrontendPassword() string {
	if m != nil {
		return m.FrontendPassword
	}
	return ""
}

func (m *InstallConfig) GetFrontendRepeatPassword() string {
	if m != nil {
		return m.FrontendRepeatPassword
	}
	return ""
}

func (m *InstallConfig) GetFpmAddress() string {
	if m != nil {
		return m.FpmAddress
	}
	return ""
}

func (m *InstallConfig) GetLicenseRequired() bool {
	if m != nil {
		return m.LicenseRequired
	}
	return false
}

func (m *InstallConfig) GetLicenseString() string {
	if m != nil {
		return m.LicenseString
	}
	return ""
}

func (m *InstallConfig) GetCheckResults() []*CheckResult {
	if m != nil {
		return m.CheckResults
	}
	return nil
}

type CheckResult struct {
	Name       string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Success    bool   `protobuf:"varint,2,opt,name=Success" json:"Success,omitempty"`
	JsonResult string `protobuf:"bytes,3,opt,name=JsonResult" json:"JsonResult,omitempty"`
}

func (m *CheckResult) Reset()                    { *m = CheckResult{} }
func (m *CheckResult) String() string            { return proto.CompactTextString(m) }
func (*CheckResult) ProtoMessage()               {}
func (*CheckResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CheckResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CheckResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CheckResult) GetJsonResult() string {
	if m != nil {
		return m.JsonResult
	}
	return ""
}

type PerformCheckRequest struct {
	Name   string         `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Config *InstallConfig `protobuf:"bytes,2,opt,name=Config" json:"Config,omitempty"`
}

func (m *PerformCheckRequest) Reset()                    { *m = PerformCheckRequest{} }
func (m *PerformCheckRequest) String() string            { return proto.CompactTextString(m) }
func (*PerformCheckRequest) ProtoMessage()               {}
func (*PerformCheckRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PerformCheckRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PerformCheckRequest) GetConfig() *InstallConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type PerformCheckResponse struct {
	Result *CheckResult `protobuf:"bytes,1,opt,name=Result" json:"Result,omitempty"`
}

func (m *PerformCheckResponse) Reset()                    { *m = PerformCheckResponse{} }
func (m *PerformCheckResponse) String() string            { return proto.CompactTextString(m) }
func (*PerformCheckResponse) ProtoMessage()               {}
func (*PerformCheckResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PerformCheckResponse) GetResult() *CheckResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetDefaultsRequest struct {
}

func (m *GetDefaultsRequest) Reset()                    { *m = GetDefaultsRequest{} }
func (m *GetDefaultsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDefaultsRequest) ProtoMessage()               {}
func (*GetDefaultsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type GetDefaultsResponse struct {
	Config *InstallConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
}

func (m *GetDefaultsResponse) Reset()                    { *m = GetDefaultsResponse{} }
func (m *GetDefaultsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDefaultsResponse) ProtoMessage()               {}
func (*GetDefaultsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetDefaultsResponse) GetConfig() *InstallConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type GetAgreementRequest struct {
}

func (m *GetAgreementRequest) Reset()                    { *m = GetAgreementRequest{} }
func (m *GetAgreementRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAgreementRequest) ProtoMessage()               {}
func (*GetAgreementRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type GetAgreementResponse struct {
	Text string `protobuf:"bytes,1,opt,name=Text" json:"Text,omitempty"`
}

func (m *GetAgreementResponse) Reset()                    { *m = GetAgreementResponse{} }
func (m *GetAgreementResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAgreementResponse) ProtoMessage()               {}
func (*GetAgreementResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetAgreementResponse) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type InstallRequest struct {
	Config *InstallConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
}

func (m *InstallRequest) Reset()                    { *m = InstallRequest{} }
func (m *InstallRequest) String() string            { return proto.CompactTextString(m) }
func (*InstallRequest) ProtoMessage()               {}
func (*InstallRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *InstallRequest) GetConfig() *InstallConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type InstallResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *InstallResponse) Reset()                    { *m = InstallResponse{} }
func (m *InstallResponse) String() string            { return proto.CompactTextString(m) }
func (*InstallResponse) ProtoMessage()               {}
func (*InstallResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *InstallResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*InstallConfig)(nil), "install.InstallConfig")
	proto.RegisterType((*CheckResult)(nil), "install.CheckResult")
	proto.RegisterType((*PerformCheckRequest)(nil), "install.PerformCheckRequest")
	proto.RegisterType((*PerformCheckResponse)(nil), "install.PerformCheckResponse")
	proto.RegisterType((*GetDefaultsRequest)(nil), "install.GetDefaultsRequest")
	proto.RegisterType((*GetDefaultsResponse)(nil), "install.GetDefaultsResponse")
	proto.RegisterType((*GetAgreementRequest)(nil), "install.GetAgreementRequest")
	proto.RegisterType((*GetAgreementResponse)(nil), "install.GetAgreementResponse")
	proto.RegisterType((*InstallRequest)(nil), "install.InstallRequest")
	proto.RegisterType((*InstallResponse)(nil), "install.InstallResponse")
}

func init() { proto.RegisterFile("install.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 779 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x95, 0xdd, 0x6e, 0x22, 0x37,
	0x14, 0xc7, 0xc5, 0x6e, 0x0a, 0xe1, 0x00, 0x9b, 0x5d, 0x87, 0x65, 0x5d, 0x36, 0xbb, 0x45, 0xa3,
	0x5e, 0xa0, 0x6d, 0xc4, 0x05, 0x95, 0xaa, 0x5e, 0xf4, 0xa2, 0x11, 0x34, 0x1f, 0x6d, 0x93, 0x22,
	0x48, 0x5a, 0x55, 0xbd, 0x1a, 0x66, 0x0e, 0x74, 0x94, 0xc1, 0x26, 0xf6, 0xa0, 0x90, 0xc7, 0xec,
	0x0b, 0xf4, 0x59, 0x2a, 0x7f, 0xcc, 0x60, 0x03, 0xa9, 0xb4, 0x77, 0xe3, 0xdf, 0xf9, 0xfb, 0x9c,
	0xe3, 0xff, 0x31, 0x06, 0x1a, 0x09, 0x93, 0x59, 0x98, 0xa6, 0xbd, 0xa5, 0xe0, 0x19, 0x27, 0x15,
	0xbb, 0x0c, 0xfe, 0xa9, 0x42, 0xe3, 0xca, 0x7c, 0x0f, 0x38, 0x9b, 0x25, 0x73, 0xd2, 0x81, 0x5a,
	0xc2, 0x32, 0x14, 0x2c, 0x4c, 0xef, 0x44, 0x4a, 0x3b, 0x9d, 0x52, 0xb7, 0x3a, 0x76, 0x11, 0xf9,
	0x04, 0xaf, 0xe3, 0xe9, 0x80, 0x33, 0x86, 0x51, 0x96, 0x70, 0x76, 0xfb, 0xb4, 0x44, 0x5a, 0xd2,
	0xb2, 0x1d, 0x4e, 0xbe, 0x86, 0x46, 0x3c, 0xbd, 0x1d, 0x8c, 0x2e, 0xb9, 0xcc, 0x58, 0xb8, 0x40,
	0xfa, 0x42, 0x0b, 0x7d, 0x48, 0x4e, 0xa0, 0xaa, 0xc1, 0x88, 0x8b, 0x8c, 0xbe, 0xd4, 0x8a, 0x0d,
	0x28, 0xa2, 0x37, 0x6a, 0xff, 0x81, 0x13, 0xbd, 0x71, 0xf7, 0xde, 0x49, 0x14, 0xf4, 0x0b, 0x27,
	0xaa, 0x40, 0x51, 0x7f, 0x14, 0x4a, 0xf9, 0xc8, 0x45, 0x4c, 0xcb, 0x4e, 0xfd, 0x1c, 0x92, 0x00,
	0xea, 0xf1, 0x74, 0xc2, 0xa3, 0x7b, 0xcc, 0xce, 0x93, 0x14, 0x69, 0x45, 0x8b, 0x3c, 0xe6, 0x6a,
	0x74, 0x23, 0x87, 0xbe, 0x46, 0xf7, 0xe2, 0x68, 0x74, 0x3b, 0x55, 0x5f, 0xa3, 0x3b, 0xd2, 0xee,
	0x99, 0x75, 0xd1, 0x14, 0xe4, 0xee, 0xf9, 0x5c, 0xcd, 0x22, 0x9e, 0x5e, 0x87, 0x6c, 0x15, 0xa6,
	0xc3, 0xc9, 0x0d, 0xad, 0x99, 0x59, 0x38, 0x88, 0xb4, 0xa0, 0x1c, 0x4b, 0xdd, 0x4f, 0x5d, 0x07,
	0xed, 0xca, 0x70, 0x6d, 0x67, 0x23, 0xe7, 0xda, 0xcb, 0x36, 0x1c, 0xc6, 0xf2, 0x9c, 0xa7, 0x31,
	0x0a, 0xfa, 0x4a, 0x47, 0x8a, 0xb5, 0xf2, 0x0a, 0xd7, 0x66, 0xcc, 0xd7, 0x49, 0x24, 0x38, 0x3d,
	0x32, 0x5e, 0x79, 0x90, 0x74, 0xe1, 0x28, 0x07, 0x17, 0x61, 0x86, 0x8f, 0xe1, 0x13, 0x7d, 0xad,
	0x75, 0xdb, 0x98, 0x9c, 0xc2, 0x9b, 0x1c, 0xfd, 0x81, 0x53, 0xa9, 0x8f, 0x46, 0xdf, 0x68, 0xed,
	0x6e, 0x80, 0xf4, 0xa1, 0x99, 0xc3, 0x73, 0xc1, 0x59, 0x36, 0x4a, 0x57, 0xf3, 0x84, 0x49, 0x4a,
	0xf4, 0x86, 0xbd, 0x31, 0xe5, 0x4f, 0xce, 0x87, 0x67, 0xbf, 0xd3, 0x63, 0xe3, 0x8f, 0x83, 0xd4,
	0x44, 0x8a, 0x52, 0xbf, 0x8d, 0xae, 0x68, 0xd3, 0x4c, 0xc4, 0x65, 0x5e, 0x16, 0x5c, 0xd3, 0xb7,
	0x5b, 0x59, 0x70, 0xed, 0x3a, 0x33, 0xc4, 0xf5, 0xd5, 0x90, 0xb6, 0x7c, 0x67, 0x34, 0x74, 0xcf,
	0x3b, 0xc4, 0xf5, 0x04, 0x23, 0x81, 0x19, 0x7d, 0xe7, 0x9f, 0xb7, 0x08, 0xa8, 0x9c, 0x33, 0x75,
	0x16, 0x64, 0xb1, 0xfa, 0x1d, 0x48, 0x4a, 0x4d, 0x4e, 0x0f, 0xba, 0xaa, 0x5f, 0xf9, 0x3c, 0x61,
	0xf4, 0x4b, 0x5f, 0xa5, 0xa1, 0xba, 0x53, 0x39, 0x28, 0xee, 0x54, 0xdb, 0xdc, 0xa9, 0x6d, 0x4e,
	0xbe, 0x83, 0x56, 0xce, 0xc6, 0xb8, 0xc4, 0x70, 0x73, 0x0b, 0xdf, 0xeb, 0x1d, 0xcf, 0x44, 0xc9,
	0x47, 0x80, 0xd9, 0x72, 0x71, 0x16, 0xc7, 0x02, 0xa5, 0xa4, 0x27, 0x5a, 0xeb, 0x10, 0x75, 0x2f,
	0xd2, 0x24, 0x42, 0x26, 0x71, 0x8c, 0x0f, 0xab, 0x44, 0x60, 0x4c, 0x3f, 0x74, 0x4a, 0xdd, 0xc3,
	0xf1, 0x36, 0x56, 0x67, 0xb2, 0x68, 0x92, 0x89, 0x84, 0xcd, 0xe9, 0x47, 0x73, 0x26, 0x0f, 0x92,
	0xef, 0xa1, 0x3e, 0xf8, 0x1b, 0xa3, 0xfb, 0x31, 0xca, 0x55, 0x9a, 0x49, 0xfa, 0x55, 0xe7, 0x65,
	0xb7, 0xd6, 0x6f, 0xf6, 0xf2, 0x87, 0xcc, 0x09, 0x8e, 0x3d, 0x65, 0xf0, 0x17, 0xd4, 0x9c, 0x35,
	0x21, 0x70, 0xa0, 0x7f, 0x20, 0xe6, 0x89, 0xd2, 0xdf, 0x84, 0x42, 0x65, 0xb2, 0x8a, 0x22, 0x75,
	0x92, 0x17, 0xba, 0xc9, 0x7c, 0xa9, 0x8e, 0xf9, 0xb3, 0xe4, 0xcc, 0xec, 0xb5, 0x6f, 0x91, 0x43,
	0x82, 0x3f, 0xe1, 0x78, 0x84, 0x62, 0xc6, 0xc5, 0xc2, 0xd6, 0x78, 0x58, 0xa1, 0xdc, 0x5f, 0xa4,
	0x07, 0x65, 0xf3, 0xa6, 0xea, 0x1a, 0xb5, 0x7e, 0xab, 0xe8, 0xdd, 0x7b, 0x71, 0xc7, 0x56, 0x15,
	0x0c, 0xa1, 0xe9, 0xa7, 0x96, 0x4b, 0xce, 0x24, 0x92, 0x53, 0x28, 0xdb, 0x76, 0x4a, 0x3a, 0xcf,
	0x7e, 0x0f, 0xac, 0x26, 0x68, 0x02, 0xb9, 0xc0, 0x6c, 0x88, 0xb3, 0x50, 0x99, 0x61, 0xfb, 0x0b,
	0x7e, 0x82, 0x63, 0x8f, 0xda, 0xd4, 0x3d, 0x28, 0x47, 0xa6, 0xc5, 0xd2, 0xff, 0xb7, 0x68, 0x54,
	0xc1, 0x5b, 0x9d, 0xe6, 0x6c, 0x2e, 0x10, 0x17, 0xc8, 0xb2, 0x3c, 0xfb, 0x27, 0x68, 0xfa, 0xd8,
	0xa6, 0x27, 0x70, 0x70, 0x8b, 0xeb, 0x2c, 0x77, 0x45, 0x7d, 0x07, 0x3f, 0xc2, 0x2b, 0x9b, 0x3b,
	0xf7, 0xee, 0x73, 0x9b, 0xf8, 0x06, 0x8e, 0x8a, 0x0c, 0xb6, 0x10, 0x85, 0x8a, 0xb4, 0xf3, 0x2c,
	0x99, 0x79, 0xda, 0x65, 0xff, 0xdf, 0x12, 0x54, 0xac, 0x9a, 0x5c, 0x42, 0xcd, 0x31, 0x81, 0xbc,
	0x2f, 0xea, 0xec, 0x1a, 0xd6, 0x3e, 0xd9, 0x1f, 0xb4, 0xf5, 0x7e, 0xd8, 0x24, 0x7d, 0xb7, 0xdd,
	0x6d, 0x9e, 0x81, 0xee, 0x06, 0xec, 0xee, 0x5f, 0xa0, 0xee, 0x0e, 0x9a, 0x6c, 0x6a, 0xed, 0xb9,
	0x5a, 0xed, 0x0f, 0xcf, 0x44, 0x4d, 0xb2, 0x69, 0x59, 0xff, 0xa3, 0x7f, 0xfb, 0x5f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x5c, 0xab, 0x88, 0x26, 0xe2, 0x07, 0x00, 0x00,
}
