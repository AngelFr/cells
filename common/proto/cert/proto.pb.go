// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto.proto

/*
Package cert is a generated protocol buffer package.

It is generated from these files:
	proto.proto

It has these top-level messages:
	GetCertificateRequest
	GetCertificateResponse
	Authentication
	ShareSecretAuthentication
	LicenseInfo
	StoredLicense
	AccountLicenses
	PutLicenseInfoRequest
	PutLicenseInfoResponse
	LicenseStatsRequest
	LicenseStatsResponse
	MaintainStatsRequest
	MaintainStatsResponse
*/
package cert

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthenticationType int32

const (
	AuthenticationType_No      AuthenticationType = 0
	AuthenticationType_Secret  AuthenticationType = 1
	AuthenticationType_License AuthenticationType = 2
)

var AuthenticationType_name = map[int32]string{
	0: "No",
	1: "Secret",
	2: "License",
}
var AuthenticationType_value = map[string]int32{
	"No":      0,
	"Secret":  1,
	"License": 2,
}

func (x AuthenticationType) String() string {
	return proto.EnumName(AuthenticationType_name, int32(x))
}
func (AuthenticationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetCertificateRequest struct {
	ServiceName  string               `protobuf:"bytes,1,opt,name=serviceName" json:"serviceName,omitempty"`
	PublicKeyPEM []byte               `protobuf:"bytes,2,opt,name=publicKeyPEM,proto3" json:"publicKeyPEM,omitempty"`
	IPs          []string             `protobuf:"bytes,3,rep,name=IPs" json:"IPs,omitempty"`
	Domains      []string             `protobuf:"bytes,4,rep,name=domains" json:"domains,omitempty"`
	Auth         *google_protobuf.Any `protobuf:"bytes,5,opt,name=auth" json:"auth,omitempty"`
}

func (m *GetCertificateRequest) Reset()                    { *m = GetCertificateRequest{} }
func (m *GetCertificateRequest) String() string            { return proto.CompactTextString(m) }
func (*GetCertificateRequest) ProtoMessage()               {}
func (*GetCertificateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetCertificateRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GetCertificateRequest) GetPublicKeyPEM() []byte {
	if m != nil {
		return m.PublicKeyPEM
	}
	return nil
}

func (m *GetCertificateRequest) GetIPs() []string {
	if m != nil {
		return m.IPs
	}
	return nil
}

func (m *GetCertificateRequest) GetDomains() []string {
	if m != nil {
		return m.Domains
	}
	return nil
}

func (m *GetCertificateRequest) GetAuth() *google_protobuf.Any {
	if m != nil {
		return m.Auth
	}
	return nil
}

type GetCertificateResponse struct {
	CertBytes []byte `protobuf:"bytes,1,opt,name=certBytes,proto3" json:"certBytes,omitempty"`
}

func (m *GetCertificateResponse) Reset()                    { *m = GetCertificateResponse{} }
func (m *GetCertificateResponse) String() string            { return proto.CompactTextString(m) }
func (*GetCertificateResponse) ProtoMessage()               {}
func (*GetCertificateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetCertificateResponse) GetCertBytes() []byte {
	if m != nil {
		return m.CertBytes
	}
	return nil
}

type Authentication struct {
	Type     AuthenticationType `protobuf:"varint,1,opt,name=type,enum=cert.AuthenticationType" json:"type,omitempty"`
	AuthData []byte             `protobuf:"bytes,2,opt,name=authData,proto3" json:"authData,omitempty"`
}

func (m *Authentication) Reset()                    { *m = Authentication{} }
func (m *Authentication) String() string            { return proto.CompactTextString(m) }
func (*Authentication) ProtoMessage()               {}
func (*Authentication) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Authentication) GetType() AuthenticationType {
	if m != nil {
		return m.Type
	}
	return AuthenticationType_No
}

func (m *Authentication) GetAuthData() []byte {
	if m != nil {
		return m.AuthData
	}
	return nil
}

type ShareSecretAuthentication struct {
}

func (m *ShareSecretAuthentication) Reset()                    { *m = ShareSecretAuthentication{} }
func (m *ShareSecretAuthentication) String() string            { return proto.CompactTextString(m) }
func (*ShareSecretAuthentication) ProtoMessage()               {}
func (*ShareSecretAuthentication) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type LicenseInfo struct {
	Id           string            `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	AccountName  string            `protobuf:"bytes,2,opt,name=AccountName" json:"AccountName,omitempty"`
	ServerDomain string            `protobuf:"bytes,3,opt,name=ServerDomain" json:"ServerDomain,omitempty"`
	IssueTime    int32             `protobuf:"varint,4,opt,name=IssueTime" json:"IssueTime,omitempty"`
	ExpireTime   int32             `protobuf:"varint,5,opt,name=ExpireTime" json:"ExpireTime,omitempty"`
	MaxUsers     int64             `protobuf:"varint,6,opt,name=MaxUsers" json:"MaxUsers,omitempty"`
	MaxPeers     int64             `protobuf:"varint,7,opt,name=MaxPeers" json:"MaxPeers,omitempty"`
	Features     map[string]string `protobuf:"bytes,8,rep,name=Features" json:"Features,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *LicenseInfo) Reset()                    { *m = LicenseInfo{} }
func (m *LicenseInfo) String() string            { return proto.CompactTextString(m) }
func (*LicenseInfo) ProtoMessage()               {}
func (*LicenseInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *LicenseInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LicenseInfo) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *LicenseInfo) GetServerDomain() string {
	if m != nil {
		return m.ServerDomain
	}
	return ""
}

func (m *LicenseInfo) GetIssueTime() int32 {
	if m != nil {
		return m.IssueTime
	}
	return 0
}

func (m *LicenseInfo) GetExpireTime() int32 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *LicenseInfo) GetMaxUsers() int64 {
	if m != nil {
		return m.MaxUsers
	}
	return 0
}

func (m *LicenseInfo) GetMaxPeers() int64 {
	if m != nil {
		return m.MaxPeers
	}
	return 0
}

func (m *LicenseInfo) GetFeatures() map[string]string {
	if m != nil {
		return m.Features
	}
	return nil
}

type StoredLicense struct {
	License      *LicenseInfo `protobuf:"bytes,1,opt,name=License" json:"License,omitempty"`
	KeyId        string       `protobuf:"bytes,2,opt,name=KeyId" json:"KeyId,omitempty"`
	SignedOutput string       `protobuf:"bytes,3,opt,name=SignedOutput" json:"SignedOutput,omitempty"`
}

func (m *StoredLicense) Reset()                    { *m = StoredLicense{} }
func (m *StoredLicense) String() string            { return proto.CompactTextString(m) }
func (*StoredLicense) ProtoMessage()               {}
func (*StoredLicense) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *StoredLicense) GetLicense() *LicenseInfo {
	if m != nil {
		return m.License
	}
	return nil
}

func (m *StoredLicense) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *StoredLicense) GetSignedOutput() string {
	if m != nil {
		return m.SignedOutput
	}
	return ""
}

type AccountLicenses struct {
	AccountName string                    `protobuf:"bytes,1,opt,name=AccountName" json:"AccountName,omitempty"`
	Licenses    map[string]*StoredLicense `protobuf:"bytes,2,rep,name=Licenses" json:"Licenses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *AccountLicenses) Reset()                    { *m = AccountLicenses{} }
func (m *AccountLicenses) String() string            { return proto.CompactTextString(m) }
func (*AccountLicenses) ProtoMessage()               {}
func (*AccountLicenses) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AccountLicenses) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *AccountLicenses) GetLicenses() map[string]*StoredLicense {
	if m != nil {
		return m.Licenses
	}
	return nil
}

type PutLicenseInfoRequest struct {
	License *LicenseInfo `protobuf:"bytes,1,opt,name=License" json:"License,omitempty"`
}

func (m *PutLicenseInfoRequest) Reset()                    { *m = PutLicenseInfoRequest{} }
func (m *PutLicenseInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*PutLicenseInfoRequest) ProtoMessage()               {}
func (*PutLicenseInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PutLicenseInfoRequest) GetLicense() *LicenseInfo {
	if m != nil {
		return m.License
	}
	return nil
}

type PutLicenseInfoResponse struct {
	Success bool `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
}

func (m *PutLicenseInfoResponse) Reset()                    { *m = PutLicenseInfoResponse{} }
func (m *PutLicenseInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*PutLicenseInfoResponse) ProtoMessage()               {}
func (*PutLicenseInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PutLicenseInfoResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type LicenseStatsRequest struct {
	ForceRefresh bool `protobuf:"varint,1,opt,name=ForceRefresh" json:"ForceRefresh,omitempty"`
}

func (m *LicenseStatsRequest) Reset()                    { *m = LicenseStatsRequest{} }
func (m *LicenseStatsRequest) String() string            { return proto.CompactTextString(m) }
func (*LicenseStatsRequest) ProtoMessage()               {}
func (*LicenseStatsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *LicenseStatsRequest) GetForceRefresh() bool {
	if m != nil {
		return m.ForceRefresh
	}
	return false
}

type LicenseStatsResponse struct {
	License     *LicenseInfo `protobuf:"bytes,1,opt,name=License" json:"License,omitempty"`
	ActiveUsers int64        `protobuf:"varint,2,opt,name=ActiveUsers" json:"ActiveUsers,omitempty"`
	ActivePeers int64        `protobuf:"varint,3,opt,name=ActivePeers" json:"ActivePeers,omitempty"`
}

func (m *LicenseStatsResponse) Reset()                    { *m = LicenseStatsResponse{} }
func (m *LicenseStatsResponse) String() string            { return proto.CompactTextString(m) }
func (*LicenseStatsResponse) ProtoMessage()               {}
func (*LicenseStatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *LicenseStatsResponse) GetLicense() *LicenseInfo {
	if m != nil {
		return m.License
	}
	return nil
}

func (m *LicenseStatsResponse) GetActiveUsers() int64 {
	if m != nil {
		return m.ActiveUsers
	}
	return 0
}

func (m *LicenseStatsResponse) GetActivePeers() int64 {
	if m != nil {
		return m.ActivePeers
	}
	return 0
}

type MaintainStatsRequest struct {
	ActiveUsers int64 `protobuf:"varint,2,opt,name=ActiveUsers" json:"ActiveUsers,omitempty"`
}

func (m *MaintainStatsRequest) Reset()                    { *m = MaintainStatsRequest{} }
func (m *MaintainStatsRequest) String() string            { return proto.CompactTextString(m) }
func (*MaintainStatsRequest) ProtoMessage()               {}
func (*MaintainStatsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *MaintainStatsRequest) GetActiveUsers() int64 {
	if m != nil {
		return m.ActiveUsers
	}
	return 0
}

type MaintainStatsResponse struct {
}

func (m *MaintainStatsResponse) Reset()                    { *m = MaintainStatsResponse{} }
func (m *MaintainStatsResponse) String() string            { return proto.CompactTextString(m) }
func (*MaintainStatsResponse) ProtoMessage()               {}
func (*MaintainStatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func init() {
	proto.RegisterType((*GetCertificateRequest)(nil), "cert.GetCertificateRequest")
	proto.RegisterType((*GetCertificateResponse)(nil), "cert.GetCertificateResponse")
	proto.RegisterType((*Authentication)(nil), "cert.Authentication")
	proto.RegisterType((*ShareSecretAuthentication)(nil), "cert.ShareSecretAuthentication")
	proto.RegisterType((*LicenseInfo)(nil), "cert.LicenseInfo")
	proto.RegisterType((*StoredLicense)(nil), "cert.StoredLicense")
	proto.RegisterType((*AccountLicenses)(nil), "cert.AccountLicenses")
	proto.RegisterType((*PutLicenseInfoRequest)(nil), "cert.PutLicenseInfoRequest")
	proto.RegisterType((*PutLicenseInfoResponse)(nil), "cert.PutLicenseInfoResponse")
	proto.RegisterType((*LicenseStatsRequest)(nil), "cert.LicenseStatsRequest")
	proto.RegisterType((*LicenseStatsResponse)(nil), "cert.LicenseStatsResponse")
	proto.RegisterType((*MaintainStatsRequest)(nil), "cert.MaintainStatsRequest")
	proto.RegisterType((*MaintainStatsResponse)(nil), "cert.MaintainStatsResponse")
	proto.RegisterEnum("cert.AuthenticationType", AuthenticationType_name, AuthenticationType_value)
}

func init() { proto.RegisterFile("proto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 789 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x5d, 0x6e, 0xdb, 0x46,
	0x10, 0x2e, 0xa9, 0x5f, 0x0f, 0x25, 0x55, 0x5d, 0xcb, 0x2e, 0x4d, 0x1b, 0x2d, 0xc1, 0xbe, 0xb0,
	0x3f, 0x90, 0x01, 0x16, 0x2d, 0xdc, 0xfa, 0xa1, 0x50, 0x6d, 0xb9, 0x15, 0x5c, 0xbb, 0x02, 0xe5,
	0xbc, 0x04, 0x79, 0xa1, 0xa9, 0x91, 0x44, 0xc4, 0x26, 0x15, 0xee, 0x52, 0x30, 0x4f, 0x90, 0x03,
	0xe5, 0x0e, 0xb9, 0x40, 0x2e, 0x92, 0x23, 0x04, 0xdc, 0x5d, 0xca, 0xa4, 0xac, 0x20, 0xf0, 0x8b,
	0xc0, 0xf9, 0xe6, 0xdb, 0xf9, 0xf9, 0x66, 0x76, 0x05, 0xda, 0x32, 0x8e, 0x58, 0xd4, 0xe7, 0xbf,
	0xa4, 0xea, 0x63, 0xcc, 0x8c, 0x83, 0x79, 0x14, 0xcd, 0xef, 0xf0, 0x98, 0x63, 0xb7, 0xc9, 0xec,
	0xd8, 0x0b, 0x53, 0x41, 0xb0, 0xde, 0x29, 0xb0, 0xf7, 0x0f, 0xb2, 0x33, 0x8c, 0x59, 0x30, 0x0b,
	0x7c, 0x8f, 0xa1, 0x8b, 0x6f, 0x12, 0xa4, 0x8c, 0x98, 0xa0, 0x51, 0x8c, 0x57, 0x81, 0x8f, 0xd7,
	0xde, 0x3d, 0xea, 0x8a, 0xa9, 0xd8, 0x3b, 0x6e, 0x11, 0x22, 0x16, 0xb4, 0x96, 0xc9, 0xed, 0x5d,
	0xe0, 0x5f, 0x62, 0x3a, 0x1e, 0x5e, 0xe9, 0xaa, 0xa9, 0xd8, 0x2d, 0xb7, 0x84, 0x91, 0x2e, 0x54,
	0x46, 0x63, 0xaa, 0x57, 0xcc, 0x8a, 0xbd, 0xe3, 0x66, 0x9f, 0x44, 0x87, 0xc6, 0x34, 0xba, 0xf7,
	0x82, 0x90, 0xea, 0x55, 0x8e, 0xe6, 0x26, 0xb1, 0xa1, 0xea, 0x25, 0x6c, 0xa1, 0xd7, 0x4c, 0xc5,
	0xd6, 0x9c, 0x5e, 0x5f, 0x54, 0xdd, 0xcf, 0xab, 0xee, 0x0f, 0xc2, 0xd4, 0xe5, 0x0c, 0xeb, 0x77,
	0xd8, 0xdf, 0x2c, 0x9a, 0x2e, 0xa3, 0x90, 0x22, 0x39, 0x82, 0x9d, 0xac, 0xe5, 0xbf, 0x53, 0x86,
	0x94, 0xd7, 0xdc, 0x72, 0x1f, 0x01, 0xeb, 0x25, 0x74, 0x06, 0x09, 0x5b, 0x60, 0xc8, 0xb2, 0x53,
	0x41, 0x14, 0x92, 0x5f, 0xa0, 0xca, 0xd2, 0xa5, 0x68, 0xaf, 0xe3, 0xe8, 0xfd, 0x8c, 0xdb, 0x2f,
	0x73, 0x6e, 0xd2, 0x25, 0xba, 0x9c, 0x45, 0x0c, 0x68, 0x66, 0xf9, 0xcf, 0x3d, 0xe6, 0xc9, 0x6e,
	0xd7, 0xb6, 0x75, 0x08, 0x07, 0x93, 0x85, 0x17, 0xe3, 0x04, 0xfd, 0x18, 0x59, 0x39, 0x84, 0xf5,
	0x41, 0x05, 0xed, 0xbf, 0xc0, 0xc7, 0x90, 0xe2, 0x28, 0x9c, 0x45, 0xa4, 0x03, 0xea, 0x68, 0x2a,
	0x35, 0x55, 0x47, 0xd3, 0x4c, 0xec, 0x81, 0xef, 0x47, 0x49, 0xc8, 0xb8, 0xd8, 0xaa, 0x10, 0xbb,
	0x00, 0x65, 0x62, 0x4f, 0x30, 0x5e, 0x61, 0x7c, 0xce, 0xd5, 0xd2, 0x2b, 0x9c, 0x52, 0xc2, 0xb2,
	0xe6, 0x47, 0x94, 0x26, 0x78, 0x13, 0xdc, 0xa3, 0x5e, 0x35, 0x15, 0xbb, 0xe6, 0x3e, 0x02, 0xe4,
	0x3b, 0x80, 0xe1, 0xc3, 0x32, 0x88, 0x85, 0xbb, 0xc6, 0xdd, 0x05, 0x24, 0x6b, 0xee, 0xca, 0x7b,
	0x78, 0x41, 0x31, 0xa6, 0x7a, 0xdd, 0x54, 0xec, 0x8a, 0xbb, 0xb6, 0xa5, 0x6f, 0x8c, 0x99, 0xaf,
	0xb1, 0xf6, 0x71, 0x9b, 0x9c, 0x42, 0xf3, 0x02, 0x3d, 0x96, 0xc4, 0x48, 0xf5, 0xa6, 0x59, 0xb1,
	0x35, 0xe7, 0x7b, 0x21, 0x63, 0xa1, 0xe1, 0x7e, 0xce, 0x18, 0x86, 0x2c, 0x4e, 0xdd, 0xf5, 0x01,
	0xe3, 0x14, 0xda, 0x25, 0x57, 0xb6, 0x30, 0xaf, 0x31, 0x95, 0xd2, 0x64, 0x9f, 0xa4, 0x07, 0xb5,
	0x95, 0x77, 0x97, 0xe4, 0xaa, 0x08, 0xe3, 0x4f, 0xf5, 0x44, 0xb1, 0x56, 0xd0, 0x9e, 0xb0, 0x28,
	0xc6, 0xa9, 0xcc, 0x44, 0x7e, 0x86, 0x86, 0xfc, 0xe4, 0x01, 0x34, 0xe7, 0x9b, 0x27, 0x95, 0xb8,
	0x39, 0x23, 0x8b, 0x7b, 0x89, 0xe9, 0x68, 0x9a, 0xc7, 0xe5, 0x06, 0xd7, 0x39, 0x98, 0x87, 0x38,
	0xfd, 0x3f, 0x61, 0xcb, 0x84, 0xad, 0x75, 0x2e, 0x60, 0xd6, 0x7b, 0x05, 0xbe, 0x96, 0xb3, 0x91,
	0xc1, 0xe8, 0xe6, 0x04, 0x95, 0xa7, 0x13, 0xfc, 0x0b, 0x9a, 0x39, 0x5b, 0x57, 0xb9, 0x4e, 0x3f,
	0xc8, 0x75, 0x2b, 0x87, 0xca, 0xab, 0xcd, 0xb5, 0xca, 0x4d, 0x63, 0x0c, 0xed, 0x92, 0x6b, 0x8b,
	0x56, 0x3f, 0x16, 0xb5, 0xd2, 0x9c, 0x5d, 0x91, 0xa0, 0x24, 0x52, 0x51, 0xc0, 0x73, 0xd8, 0x1b,
	0x27, 0xac, 0xa8, 0x8e, 0xbc, 0xfc, 0xcf, 0x11, 0xd2, 0x72, 0x60, 0x7f, 0x33, 0x8a, 0xbc, 0x8d,
	0x3a, 0x34, 0x26, 0x89, 0xef, 0x23, 0x15, 0x77, 0xb1, 0xe9, 0xe6, 0xa6, 0xf5, 0x07, 0xec, 0xca,
	0x03, 0x13, 0xe6, 0x31, 0x9a, 0xe7, 0xb5, 0xa0, 0x75, 0x11, 0xc5, 0x3e, 0xba, 0x38, 0x8b, 0x91,
	0x2e, 0xe4, 0xa9, 0x12, 0x66, 0xbd, 0x55, 0xa0, 0x57, 0x3e, 0x2b, 0xb3, 0x3d, 0x6b, 0xfa, 0x7c,
	0x5e, 0x2c, 0x58, 0xa1, 0x58, 0x78, 0x95, 0x2f, 0x75, 0x11, 0x7a, 0x64, 0x88, 0xb5, 0xaf, 0x14,
	0x19, 0x1c, 0xb2, 0x4e, 0xa0, 0x77, 0xe5, 0x05, 0x21, 0xf3, 0x82, 0xb0, 0xd4, 0xc5, 0x17, 0x63,
	0x5b, 0xdf, 0xc2, 0xde, 0xc6, 0x49, 0xd1, 0xc3, 0x4f, 0xbf, 0x01, 0x79, 0xfa, 0xfa, 0x90, 0x3a,
	0xa8, 0xd7, 0x51, 0xf7, 0x2b, 0x02, 0x50, 0x17, 0xcf, 0x4b, 0x57, 0x21, 0xda, 0xba, 0xdb, 0xae,
	0xea, 0xbc, 0x82, 0x76, 0xf6, 0x1a, 0x9e, 0x0d, 0x26, 0xe2, 0x7d, 0x26, 0x97, 0xd0, 0x29, 0xbf,
	0x90, 0xe4, 0x50, 0x88, 0xb1, 0xf5, 0xb1, 0x37, 0x8e, 0xb6, 0x3b, 0x45, 0x51, 0xce, 0x47, 0x05,
	0xba, 0x22, 0x57, 0x10, 0xce, 0x0b, 0x19, 0xca, 0x53, 0xcf, 0x33, 0x6c, 0xdd, 0xa8, 0x3c, 0xc3,
	0x67, 0x16, 0x65, 0x08, 0xad, 0xe2, 0x48, 0xc9, 0x41, 0x69, 0x72, 0x45, 0x71, 0x0d, 0x63, 0x9b,
	0x4b, 0x86, 0xf9, 0x17, 0xda, 0x25, 0x59, 0x89, 0x24, 0x6f, 0x9b, 0x92, 0x71, 0xb8, 0xd5, 0x27,
	0x22, 0xdd, 0xd6, 0xf9, 0xbf, 0xce, 0xaf, 0x9f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x7f, 0x91,
	0xe8, 0x4e, 0x07, 0x00, 0x00,
}
